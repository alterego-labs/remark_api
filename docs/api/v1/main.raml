#%RAML 1.0
title: Remark App API
baseUri: http://remark-api.alterego-labs.com/api/{version}
version: v1
protocols: [HTTP]
mediaType: application/json
description: !include home.md

types:
  User:
    type: object
    properties:
      login: string
  User.login:
    type: object
    properties:
      login:
        type: string
        required: true
  Message:
    type: object
    properties:
      id: string
      body: string
      created_at: string
      user: User
  Message.new:
    type: object
    properties:
      body:
        type: string
        required: true
  NewMessageBody:
    type: object
    properties:
      message:
        type: Message.new
  UserLoginBody:
    type: object
    properties:
      user:
        type: User.login
  MessageResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          message: Message
  MessageListResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          messages: Message[]
  DataResponse:
    type: object
    properties:
      data:
        type: object
  EmptyResponse:
    type: DataResponse
  UserResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          user: User
  ErrorResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          errors: array

/messages:
  displayName: Manage messages
  get:
    displayName: Messages list
    description: List of all messages
    responses:
      200:
        body:
          application/json:
            schema: MessageListResponse
            example: !include examples/messages_list.json

/login:
  displayName: User login endpoint
  post:
    displayName: User login endpoint
    description: Acquires request for user login use case
    body:
      application/json:
        schema: UserLoginBody
        example: !include examples/user_login_body.json
    responses:
      200:
        description: When valid data posted
        body:
          application/json:
            schema: UserResponse
            example: !include examples/get_user_ok.json
      422:
        description: "When invalid data posted: the structure of query do not followed"
        body:
          application/json:
            schema: ErrorResponse
            example: !include examples/login_user_422.json

/users:
  displayName: Users
  /{login}:
    displayName: User
    uriParameters:
      login:
        displayName: User login
        type: string
    get:
      displayName: User
      description: Provides the information for user
      responses:
        200:
          description: When user with requested login found
          body:
            application/json:
              schema: UserResponse
              example: !include examples/get_user_ok.json
        404:
          description: When no user with requested login exists
          body:
            application/json:
              schema: ErrorResponse
              example: !include examples/get_user_not_found.json
    /messages:
      displayName: Messages list
      description: Provides messages list of concrete user
      get:
        displayName: Message list
        responses:
          200:
            description: When user with requested login found
            body:
              application/json:
                schema: MessageListResponse
                example: !include examples/messages_list.json
          404:
            description: When no user with requested login exists
            body:
              application/json:
                schema: ErrorResponse
                example: !include examples/get_user_not_found.json
      put:
        displayName: Post new message by user which is specified by login
        body:
          application/json:
            schema: NewMessageBody
            example: !include examples/new_message_body.json
        responses:
          200:
            description: When message has been created successfully
            body:
              application/json:
                schema: MessageResponse
                example: !include examples/message.json
          404:
            description: When no user with requested login exists
            body:
              application/json:
                schema: ErrorResponse
                example: !include examples/get_user_not_found.json
          422:
            description: When validations are failed
            body:
              application/json:
                schema: ErrorResponse
                example: !include examples/message_not_valid.json
